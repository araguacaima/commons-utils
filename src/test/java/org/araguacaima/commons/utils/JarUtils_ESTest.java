/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 05 19:20:34 GMT 2017
 */

package org.araguacaima.commons.utils;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS = true,
                     useVNET = true,
                     resetStaticState = true,
                     separateClassLoader = true,
                     useJEE = true)
public class JarUtils_ESTest extends JarUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test1()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        ArrayList arrayList0 = jarUtils0.listClassesOnJar("N");
        assertTrue(arrayList0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        boolean boolean0 = jarUtils0.findClassOnJar("", "W/S?YE}DP;#lq ");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        // Undeclared exception!
        try {
            jarUtils0.generateJarFromDirectory((String) null, "' found on jar '", 1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.io.File", e);
        }
    }

    @Test(timeout = 4000)
    public void test4()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        FileSystemHandling.shouldAllThrowIOExceptions();
        try {
            jarUtils0.generateJarFromDirectory("dvO:)XjI2h2NE", "dvO:)XjI2h2NE", (-1));
            fail("Expecting exception: IOException");

        } catch (IOException e) {
            //
            // Simulated IOException
            //
            verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
        }
    }

    @Test(timeout = 4000)
    public void test5()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        try {
            jarUtils0.generateJarFromDirectory("&mz?QPJ+>u:-x", "", (-843));
            fail("Expecting exception: FileNotFoundException");

        } catch (FileNotFoundException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
        }
    }

    @Test(timeout = 4000)
    public void test6()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        // Undeclared exception!
        try {
            jarUtils0.generateJarFromDirectory((String) null, "6UQl;mT;a");
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.io.File", e);
        }
    }

    @Test(timeout = 4000)
    public void test7()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        FileSystemHandling.shouldAllThrowIOExceptions();
        try {
            jarUtils0.generateJarFromDirectory("N", "N");
            fail("Expecting exception: IOException");

        } catch (IOException e) {
            //
            // Simulated IOException
            //
            verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
        }
    }

    @Test(timeout = 4000)
    public void test8()
            throws Throwable {
        JarUtils jarUtils0 = new JarUtils();
        try {
            jarUtils0.generateJarFromDirectory("t;)Th+?%", "");
            fail("Expecting exception: FileNotFoundException");

        } catch (FileNotFoundException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
        }
    }

}
