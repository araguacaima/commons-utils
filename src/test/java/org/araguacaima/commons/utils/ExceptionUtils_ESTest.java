/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 06 20:11:03 GMT 2017
 */

package org.araguacaima.commons.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.araguacaima.commons.exception.core.Exceptions;
import org.araguacaima.commons.utils.ExceptionUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExceptionUtils_ESTest extends ExceptionUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      Locale locale0 = Locale.KOREAN;
      // Undeclared exception!
      try { 
        exceptionUtils0.getMessage((Exception) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Exception exception0 = mock(Exception.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(exception0).getMessage();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      Exception exception1 = mock(Exception.class, new ViolatedAssumptionAnswer());
      doReturn((Throwable) null).when(exception1).getCause();
      doReturn((String) null).when(exception1).getMessage();
      Exception exception2 = exceptionUtils0.cleanException(exception1);
      exceptionUtils0.cleanException(exception2);
      stringArray0[2] = "UNKNOWN";
      ExceptionUtils exceptionUtils1 = new ExceptionUtils();
      // Undeclared exception!
      try { 
        exceptionUtils1.cleanMessage(exception0, 0, 1031);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.araguacaima.commons.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      // Undeclared exception!
      try { 
        exceptionUtils0.getMessage((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      String string0 = exceptionUtils0.cleanMessage((Exception) null, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        exceptionUtils0.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.araguacaima.commons.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExceptionUtils exceptionUtils0 = new ExceptionUtils();
      String string0 = exceptionUtils0.cleanMessage((Exception) null, (-1967));
      assertNull(string0);
  }

}
