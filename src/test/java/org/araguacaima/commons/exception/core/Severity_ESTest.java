/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 06 20:12:38 GMT 2017
 */

package org.araguacaima.commons.exception.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.araguacaima.commons.exception.core.Severity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Severity_ESTest extends Severity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      Severity severity1 = Severity.INFO;
      boolean boolean0 = severity1.lessThan(severity0);
      assertEquals(4, severity1.getIntLevel());
      assertFalse(boolean0);
      assertEquals(5, severity0.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      Severity severity1 = Severity.INFO;
      boolean boolean0 = severity0.greaterThan(severity1);
      assertEquals(5, severity0.getIntLevel());
      assertFalse(boolean0);
      assertEquals(4, severity1.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      Severity severity1 = Severity.INFO;
      boolean boolean0 = severity1.equals(severity0);
      assertFalse(severity0.equals((Object)severity1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Severity severity0 = Severity.FATAL;
      Severity severity1 = Severity.DEBUG;
      boolean boolean0 = severity0.equals(severity1);
      assertFalse(boolean0);
      assertFalse(severity1.equals((Object)severity0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Severity severity0 = Severity.getSeverity("DEBUG");
      assertEquals(4, Severity.INFO_INT);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      Severity severity1 = Severity.WARNING;
      int int0 = severity0.compareTo(severity1);
      assertEquals(1, int0);
      assertEquals(3, severity1.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      Severity severity1 = Severity.INFO;
      int int0 = severity0.compareTo(severity1);
      assertEquals(5, severity0.getIntLevel());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      // Undeclared exception!
      try { 
        severity0.lessThan((Severity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.exception.core.Severity", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      // Undeclared exception!
      try { 
        severity0.greaterThan((Severity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.exception.core.Severity", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      // Undeclared exception!
      try { 
        severity0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.exception.core.Severity", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Severity severity0 = Severity.FATAL;
      Collection<Object> collection0 = Severity.getSeverities();
      // Undeclared exception!
      try { 
        severity0.compareTo(collection0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap$EntrySet cannot be cast to org.araguacaima.commons.exception.core.Severity
         //
         verifyException("org.araguacaima.commons.exception.core.Severity", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      severity0.hashCode();
      assertEquals(5, severity0.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      int int0 = severity0.getIntLevel();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      String string0 = severity0.getName();
      assertEquals("DEBUG", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Severity severity0 = Severity.FATAL;
      Severity severity1 = Severity.DEBUG;
      boolean boolean0 = severity1.lessThan(severity0);
      assertEquals(1, severity0.getIntLevel());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      boolean boolean0 = severity0.lessThan(severity0);
      assertEquals(5, severity0.getIntLevel());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Severity severity0 = Severity.FATAL;
      Severity severity1 = Severity.DEBUG;
      boolean boolean0 = severity0.greaterThan(severity1);
      assertTrue(boolean0);
      assertEquals(5, severity1.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Severity severity0 = Severity.DEBUG;
      boolean boolean0 = severity0.greaterThan(severity0);
      assertEquals(5, severity0.getIntLevel());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      boolean boolean0 = severity0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      boolean boolean0 = severity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      boolean boolean0 = severity0.equals(severity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Severity.getSeverities();
      // Undeclared exception!
      try { 
        Severity.getSeverity((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.araguacaima.commons.exception.core.Severity", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Severity severity0 = Severity.FATAL;
      String string0 = severity0.toString();
      assertEquals("FATAL", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      int int0 = severity0.compareTo(severity0);
      assertEquals(0, int0);
      assertEquals(2, severity0.getIntLevel());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Severity.getSeverity("Tld>[cgi4]pm");
      Collection<Object> collection0 = Severity.getSeverities();
      assertNotNull(collection0);
  }
}
