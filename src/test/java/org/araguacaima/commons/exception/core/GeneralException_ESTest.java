/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 06 20:14:05 GMT 2017
 */

package org.araguacaima.commons.exception.core;

import org.junit.Test;
import static org.junit.Assert.*;
import org.araguacaima.commons.exception.core.ApplicationException;
import org.araguacaima.commons.exception.core.Severity;
import org.araguacaima.commons.exception.core.StackException;
import org.araguacaima.commons.exception.core.TechnicalException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneralException_ESTest extends GeneralException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      StackException stackException0 = new StackException("Wdy1Yx\"9", severity0);
      TechnicalException technicalException0 = new TechnicalException("Wdy1Yx\"9", severity0, stackException0);
      technicalException0.magicValue = (Object) "Wdy1Yx\"9";
      Object object0 = technicalException0.getMagicValue();
      assertEquals("Wdy1Yx\"9", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackException stackException0 = new StackException((String) null, (Severity) null);
      String string0 = stackException0.getKeyCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("");
      String string0 = applicationException0.getKeyCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TechnicalException technicalException0 = new TechnicalException("@~.");
      String string0 = technicalException0.getExtendedMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackException stackException0 = new StackException(">BN$$$|}Ci", (Severity) null);
      TechnicalException technicalException0 = new TechnicalException("2c3P> _/k]", (Severity) null, stackException0, "BT~(Lx@uY\"c|O,<HF");
      String string0 = technicalException0.getExtendedMessage();
      assertEquals("BT~(Lx@uY\"c|O,<HF [[>BN$$$|}Ci]]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      StackException stackException0 = new StackException("", severity0, "");
      Severity severity1 = stackException0.getSeverity();
      assertEquals(2, Severity.ERROR_INT);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackException stackException0 = new StackException(" ", (Severity) null, (String) null);
      assertEquals(" ", stackException0.getKeyCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TechnicalException technicalException0 = new TechnicalException("W");
      ApplicationException applicationException0 = new ApplicationException("W", technicalException0);
      assertEquals("W", applicationException0.getKeyCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackException stackException0 = new StackException((String) null, (Severity) null);
      Severity severity0 = stackException0.getSeverity();
      assertNull(severity0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      StackException stackException0 = new StackException("Wdy1Yx\"9", severity0);
      stackException0.setExtendedMessage("Ay<~?SVnVeyyKq");
      assertEquals("Ay<~?SVnVeyyKq", stackException0.getExtendedMessage());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TechnicalException technicalException0 = new TechnicalException("@~.");
      String string0 = technicalException0.getKeyCode();
      assertEquals("@~.", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Severity severity0 = Severity.ERROR;
      Object[] objectArray0 = new Object[4];
      ApplicationException applicationException0 = new ApplicationException("' value as boolean (", severity0, objectArray0);
      assertEquals("' value as boolean (", applicationException0.getKeyCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Severity severity0 = Severity.WARNING;
      StackException stackException0 = new StackException("Wdy1Yx\"9", severity0);
      TechnicalException technicalException0 = new TechnicalException("Wdy1Yx\"9", severity0, stackException0);
      Object object0 = technicalException0.getMagicValue();
      assertNull(object0);
  }
}
