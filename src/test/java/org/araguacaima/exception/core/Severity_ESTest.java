/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 05 19:20:00 GMT 2017
 */

package org.araguacaima.exception.core;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Collection;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS = true,
                     useVNET = true,
                     resetStaticState = true,
                     separateClassLoader = true,
                     useJEE = true)
public class Severity_ESTest extends Severity_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        Severity severity1 = Severity.FATAL;
        boolean boolean0 = severity1.lessThan(severity0);
        assertEquals(4, severity0.getIntLevel());
        assertEquals(1, severity1.getIntLevel());
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        Severity severity1 = Severity.WARNING;
        boolean boolean0 = severity0.greaterThan(severity1);
        assertEquals(5, severity0.getIntLevel());
        assertFalse(boolean0);
        assertEquals(3, severity1.getIntLevel());
    }

    @Test(timeout = 4000)
    public void test02()
            throws Throwable {
        Severity severity0 = Severity.ERROR;
        Severity severity1 = Severity.FATAL;
        boolean boolean0 = severity0.equals(severity1);
        assertFalse(severity1.equals((Object) severity0));
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03()
            throws Throwable {
        Severity severity0 = Severity.getSeverity("WARNING");
        assertEquals(2, Severity.ERROR_INT);
    }

    @Test(timeout = 4000)
    public void test04()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        Severity severity1 = Severity.WARNING;
        int int0 = severity1.compareTo(severity0);
        assertEquals(3, severity1.getIntLevel());
        assertEquals(2, int0);
    }

    @Test(timeout = 4000)
    public void test05()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        Severity severity1 = Severity.FATAL;
        int int0 = severity0.compareTo(severity1);
        assertEquals(1, severity1.getIntLevel());
        assertEquals((-3), int0);
    }

    @Test(timeout = 4000)
    public void test06()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        // Undeclared exception!
        try {
            severity0.lessThan((Severity) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.araguacaima.exception.core.Severity", e);
        }
    }

    @Test(timeout = 4000)
    public void test07()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        // Undeclared exception!
        try {
            severity0.greaterThan((Severity) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.araguacaima.exception.core.Severity", e);
        }
    }

    @Test(timeout = 4000)
    public void test08()
            throws Throwable {
        // Undeclared exception!
        try {
            Severity.getSeverity((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.araguacaima.exception.core.Severity", e);
        }
    }

    @Test(timeout = 4000)
    public void test09()
            throws Throwable {
        Severity severity0 = Severity.WARNING;
        // Undeclared exception!
        try {
            severity0.compareTo((Object) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.araguacaima.exception.core.Severity", e);
        }
    }

    @Test(timeout = 4000)
    public void test10()
            throws Throwable {
        Severity severity0 = Severity.ERROR;
        Object object0 = new Object();
        // Undeclared exception!
        try {
            severity0.compareTo(object0);
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // java.lang.Object cannot be cast to org.araguacaima.exception.core.Severity
            //
            verifyException("org.araguacaima.exception.core.Severity", e);
        }
    }

    @Test(timeout = 4000)
    public void test11()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        int int0 = severity0.getIntLevel();
        assertEquals(5, int0);
    }

    @Test(timeout = 4000)
    public void test12()
            throws Throwable {
        Severity severity0 = Severity.FATAL;
        severity0.hashCode();
        assertEquals(1, severity0.getIntLevel());
    }

    @Test(timeout = 4000)
    public void test13()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        int int0 = severity0.compareTo(severity0);
        assertEquals(0, int0);
        assertEquals(5, severity0.getIntLevel());
    }

    @Test(timeout = 4000)
    public void test14()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        String string0 = severity0.getName();
        assertEquals("DEBUG", string0);
    }

    @Test(timeout = 4000)
    public void test15()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        Severity severity1 = Severity.ERROR;
        boolean boolean0 = severity0.lessThan(severity1);
        assertTrue(boolean0);
        assertEquals(2, severity1.getIntLevel());
    }

    @Test(timeout = 4000)
    public void test16()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        boolean boolean0 = severity0.lessThan(severity0);
        assertFalse(boolean0);
        assertEquals(4, severity0.getIntLevel());
    }

    @Test(timeout = 4000)
    public void test17()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        Severity severity1 = Severity.FATAL;
        boolean boolean0 = severity1.greaterThan(severity0);
        assertEquals(1, severity1.getIntLevel());
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test18()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        Severity severity1 = Severity.FATAL;
        boolean boolean0 = severity0.equals(severity1);
        assertFalse(boolean0);
        assertFalse(severity1.equals((Object) severity0));
    }

    @Test(timeout = 4000)
    public void test19()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        boolean boolean0 = severity0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test20()
            throws Throwable {
        Severity severity0 = Severity.INFO;
        boolean boolean0 = severity0.equals(severity0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test21()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        Object object0 = new Object();
        boolean boolean0 = severity0.equals(object0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test22()
            throws Throwable {
        Severity severity0 = Severity.getSeverity("");
        assertNull(severity0);
    }

    @Test(timeout = 4000)
    public void test23()
            throws Throwable {
        Severity.getSeverities();
        Severity severity0 = Severity.getSeverity("vk!U%:JPXLcU3y\":eJ,");
        assertNull(severity0);
    }

    @Test(timeout = 4000)
    public void test24()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        String string0 = severity0.toString();
        assertEquals("DEBUG", string0);
    }

    @Test(timeout = 4000)
    public void test25()
            throws Throwable {
        Collection collection0 = Severity.getSeverities();
        Collection collection1 = Severity.getSeverities();
        assertSame(collection1, collection0);
    }

    @Test(timeout = 4000)
    public void test26()
            throws Throwable {
        Severity severity0 = Severity.DEBUG;
        boolean boolean0 = severity0.greaterThan(severity0);
        assertEquals(5, severity0.getIntLevel());
        assertFalse(boolean0);
    }
}
