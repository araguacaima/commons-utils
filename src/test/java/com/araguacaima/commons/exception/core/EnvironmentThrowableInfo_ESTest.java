/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 08 16:16:23 GMT 2017
 */

package com.araguacaima.commons.exception.core;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Collection;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS = true,
                     useVNET = true,
                     resetStaticState = true,
                     separateClassLoader = true,
                     useJEE = true)
public class EnvironmentThrowableInfo_ESTest extends EnvironmentThrowableInfo_ESTest_scaffolding {

    @Test
    public void test00()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable("");
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0);
        environmentThrowableInfo0.fullInfo = "gHQ(";
        String string0 = environmentThrowableInfo0.getMethodName();
        assertEquals("?", string0);
        assertNotNull(string0);
    }

    @Test
    public void test01()
            throws Throwable {
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo((Throwable) null, "");
        Collection collection0 = environmentThrowableInfo0.getStackTrace();
        assertNull(collection0);
    }

    @Test
    public void test02()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0);
        environmentThrowableInfo0.fullInfo = "i8qxYUGo41%W[|[X4r";
        environmentThrowableInfo0.methodName = "";
        String string0 = environmentThrowableInfo0.getMethodName();
        assertEquals("", string0);
        assertNotNull(string0);
    }

    @Test
    public void test03()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0);
        environmentThrowableInfo0.fullInfo = "i8qxYUGo41%W[|[X4r";
        environmentThrowableInfo0.lineNumber = "";
        String string0 = environmentThrowableInfo0.getLineNumber();
        assertNotNull(string0);
        assertEquals("", string0);
    }

    @Test
    public void test04()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable("");
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0);
        environmentThrowableInfo0.fullInfo = "";
        environmentThrowableInfo0.className = "";
        String string0 = environmentThrowableInfo0.getClassName();
        assertEquals("", string0);
        assertNotNull(string0);
    }

    @Test
    public void test05()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable("{");
        mockThrowable0.setOriginForDelegate((StackTraceElement) null);
        EnvironmentThrowableInfo environmentThrowableInfo0 = null;
        try {
            environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "{");
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.evosuite.runtime.mock.java.lang.MockThrowable", e);
        }
    }

    @Test
    public void test06()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "qWN[]");
        String string0 = environmentThrowableInfo0.getMethodName();
        assertEquals("?", string0);
    }

    @Test
    public void test07()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "qWN[]");
        String string0 = environmentThrowableInfo0.getLineNumber();
        assertEquals("?", string0);
    }

    @Test
    public void test08()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "");
        environmentThrowableInfo0.fullInfo = "`4#u<-=8.TX)-";
        environmentThrowableInfo0.getLineNumber();
        String string0 = environmentThrowableInfo0.getLineNumber();
        assertEquals("?", string0);
        assertNotNull(string0);
    }

    @Test
    public void test09()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "qWN[]");
        String string0 = environmentThrowableInfo0.getFileName();
        assertEquals("?", string0);
    }

    @Test
    public void test10()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "");
        environmentThrowableInfo0.fullInfo = "`4#u<-=8.TX)-";
        environmentThrowableInfo0.getFileName();
        String string0 = environmentThrowableInfo0.getFileName();
        assertNotNull(string0);
        assertEquals("?", string0);
    }

    @Test
    public void test11()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable("");
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0);
        environmentThrowableInfo0.fullInfo = "gHQ(";
        String string0 = environmentThrowableInfo0.getClassName();
        assertNotNull(string0);
        assertEquals("?", string0);
    }

    @Test
    public void test12()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        StackTraceElement stackTraceElement0 = new StackTraceElement(
                "com.araguacaima.commons.exception.core.EnvironmentThrowableInfo",
                "rRihzlPgiWP",
                "S0xuI'H0YNKE0g)H$",
                (-2103720664));
        mockThrowable0.setOriginForDelegate(stackTraceElement0);
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0,
                "com.araguacaima.commons.exception.core.EnvironmentThrowableInfo");
        String string0 = environmentThrowableInfo0.getClassName();
        assertEquals("<evosuite>", string0);
    }

    @Test
    public void test13()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "qWN[]");
        String string0 = environmentThrowableInfo0.getClassName();
        assertEquals("?", string0);
    }

    @Test
    public void test14()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "");
        environmentThrowableInfo0.fullInfo = "`4#u<-=8.TX)-";
        String string0 = environmentThrowableInfo0.getClassName();
        assertEquals("?", string0);
        assertNotNull(string0);
    }

    @Test
    public void test15()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        MockThrowable mockThrowable1 = new MockThrowable("0{EPJ>u^Yh", mockThrowable0);
        Throwable throwable0 = mockThrowable1.getCause();
        StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
        StackTraceElement stackTraceElement0 = new StackTraceElement("qWN[]", "qWN[]", "qWN[]", 46);
        stackTraceElementArray0[0] = stackTraceElement0;
        stackTraceElementArray0[1] = stackTraceElementArray0[0];
        mockThrowable0.setStackTrace(stackTraceElementArray0);
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(throwable0, "qWN[]");
    }

    @Test
    public void test16()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0,
                (String) null);
    }

    @Test
    public void test17()
            throws Throwable {
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo((Throwable) null, "");
        environmentThrowableInfo0.fileName = "?";
        environmentThrowableInfo0.fullInfo = "";
        environmentThrowableInfo0.fileName = "";
        String string0 = environmentThrowableInfo0.getFileName();
        assertNotNull(string0);
        assertEquals("", string0);
    }

    @Test
    public void test18()
            throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable();
        EnvironmentThrowableInfo environmentThrowableInfo0 = new EnvironmentThrowableInfo(mockThrowable0, "");
        Collection collection0 = environmentThrowableInfo0.getStackTrace();
        assertNotNull(collection0);
    }

    @Test
    public void test19()
            throws Throwable {
        EnvironmentThrowableInfo environmentThrowableInfo0 = null;
        try {
            environmentThrowableInfo0 = new EnvironmentThrowableInfo((Throwable) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.araguacaima.commons.exception.core.EnvironmentThrowableInfo", e);
        }
    }
}
