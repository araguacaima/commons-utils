/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 08 16:26:05 GMT 2017
 */

package com.araguacaima.commons.utils;

import com.araguacaima.commons.exception.core.PropertiesUtilException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Properties;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS = true,
                     useVNET = true,
                     resetStaticState = true,
                     separateClassLoader = true,
                     useJEE = true)
public class PropertiesHandler_ESTest extends PropertiesHandler_ESTest_scaffolding {

    @Test
    public void test0()
            throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("D:\\Workspace\\araguacaima\\commons-utils\\$#_");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "$#_");
        PropertiesHandler propertiesHandler0 = new PropertiesHandler("$#_");
        Properties properties0 = propertiesHandler0.getProperties();
        assertEquals(1, properties0.size());
    }

    @Test
    public void test1()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler((String) null);
        String string0 = propertiesHandler0.getLogFileSourceName();
        assertNull(string0);
    }

    @Test
    public void test2()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler();
        String string0 = propertiesHandler0.getLogFileSourceName();
        assertEquals("", string0);
    }

    @Test
    public void test3()
            throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("D:\\Workspace\\araguacaima\\commons-utils\\ found on classpath");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "\tSearching thru classloader (1): ");
        PropertiesHandler propertiesHandler0 = new PropertiesHandler(" found on classpath");
        String string0 = propertiesHandler0.getAbsolutePropertiesFilePath();
        assertEquals("/D:/Workspace/araguacaima/commons-utils/%20found%20on%20classpath", string0);
    }

    @Test
    public void test4()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler("$#_");
        Properties properties0 = propertiesHandler0.getProperties();
        assertEquals(0, properties0.size());
    }

    @Test
    public void test5()
            throws Throwable {
        ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
        PropertiesHandler propertiesHandler0 = null;
        try {
            new PropertiesHandler("grj9458tu948jer", classLoader0);
            fail("Expecting exception: PropertiesUtilException");

        } catch (PropertiesUtilException e) {
            verifyException("com.araguacaima.commons.utils.PropertiesHandler", e);
        }
    }

    @Test
    public void test6()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler(" found on classpath");
        String string0 = propertiesHandler0.getAbsolutePropertiesFilePath();
        assertNull(string0);
    }

    @Test
    public void test7()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler("$#_");
        Class<String> class0 = String.class;
        // Undeclared exception!
        try {
            propertiesHandler0.loadConfig("$#_", class0);
            fail("Expecting exception: PropertiesUtilException");

        } catch (PropertiesUtilException e) {
            verifyException("com.araguacaima.commons.utils.PropertiesHandler", e);
        }
    }

    @Test
    public void test8()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler();
        // Undeclared exception!
        try {
            propertiesHandler0.loadConfig("", (Class) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.araguacaima.commons.utils.PropertiesHandler", e);
        }
    }

    @Test
    public void test9()
            throws Throwable {
        PropertiesHandler propertiesHandler0 = new PropertiesHandler("$#_");
        String string0 = propertiesHandler0.getLogFileSourceName();
        assertEquals("$#_", string0);
    }
}
